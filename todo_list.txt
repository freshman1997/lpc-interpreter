1、嵌套的宏定义未处理
2、继承未处理 done
3、闭包未处理
4、sfun 未生成 done
5、efun 未定义好 done
6、类的原型、函数原型、闭包原型，class的原型
7、gc 未设计 done
8、其他表达式返回的函数执行 done
9、函数返回值处理   done
10、尾递归处理
11、最短路径处理
12、报错优化
13、虚拟机出错堆栈信息
14、catch 实现
15、库函数实现
16、类型检查
17、函数有返回值但是未使用处理  done 
18、栈保护，不能出栈当前栈帧参数最后位置内的元素

只支持单继承，所以执行函数的时候有：
    1、执行覆盖的函数
    2、执行父类的函数
指令：invoke_virtual x y 
        x 为父类中的哪一个，也就是深度
        y 为哪一个函数，即为类中的函数偏移
    这样子就可以在编译期间计算出来是调用的哪一个对象中的函数，所以是可以得到对象中函数的偏移的
    父类中的全局变量需要在运行期计算出偏移，因为只能在初始化和函数中修改全局变量，故可以拿到偏移
      
    

mapping test()
{
    return {};
}

void add()
{
    int a = 10;
    int b = 20;
    mapping aa = {};

    aa[12] = 100;
}

new_mapping
return

load_iconst 0
store_local 0
load_iconst 1
store_local 1
new_mapping
store_local 2

op_load_local 2
load_iconst 2
load_iconst 3
op_upset

